<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>站点建设中</description>
    <link>http://lomoy.github.io/</link>
    <atom:link href="http://lomoy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 22 Oct 2016 16:23:21 +0800</pubDate>
    <lastBuildDate>Sat, 22 Oct 2016 16:23:21 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>微信小程序胡说八道</title>
        <description>&lt;nav class=&quot;js-toc toc&quot;&gt;
  &lt;h4 class=&quot;toc__title&quot;&gt;Contents&lt;/h4&gt;
&lt;ul class=&quot;toc__menu&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;小程序诞生的背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;什么是小程序&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#app&quot; id=&quot;markdown-toc-app&quot;&gt;小程序到底有多接近传统的APP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;最后&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;p&gt;本文主要从产品的角度让你相对全面的了解‘微信小程序’是什么，这也是为什么将‘微信小程序导论’作为文章名的原因。代码层的部分将用很少的篇幅进行概括，因此，不论你是产品经理，微信运营，还是前端开发工程师都能无障碍地进行本文的阅读。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;小程序诞生的背景&lt;/h2&gt;

&lt;p&gt;移动应用的欣欣向荣使得APP开发空前火热，现有的APP基数非常大，新晋的APP也是层出不穷，撇开新老APP之间的同质性差异性等问题，APP的总量就像国庆时长城上的游客 ———— 多的一笔！&lt;/p&gt;

&lt;p&gt;但是，一款APP的推广成本依然居高不下，而花了大价钱推广，最后又能够吸引用户、留住用户的APP、保持一个使用率的APP又很少。&lt;/p&gt;

&lt;p&gt;比起有钱的公司，手头比较紧的公司就将产品从APP上搬到了微信公众号（包括了订阅号、服务号、企业号）上去实现，但是公众号的用户体验很难达到他们的预期。举例而言，如果你想买一包方便面，你会选择打开微信进入一个公众号购买，还是打开淘宝？后者应该更加符合用户的行为，公众号本身给人的印象更像是用来传递信息的。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;什么是小程序&lt;/h2&gt;

&lt;p&gt;根据张小龙上的这段话。以及我自己的理解，小程序本身并不是一个APP，只是用’一堆包了一层APP模仿组件的移动端页面去模仿原生的APP‘。句话包含了以下几点内容，我同时概括成优势与劣势：&lt;/p&gt;

&lt;p&gt;优势&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1.用户体验接近传统的APP，比单纯的网页有更快的加载速度&lt;/li&gt;
  &lt;li&gt;2.学习周期快，不用学习新的语言。前端工程师就能搞定，帮公司解约了人力的成本&lt;/li&gt;
  &lt;li&gt;3.不需要下载安装，不占容量&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;劣势：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1.专业化高的APP功能，小程序无法实现（不知道为什么）&lt;/li&gt;
  &lt;li&gt;2.‘小程序’不会像公众号这样主动推送信息给用户，只有用户想到了才回去打开。&lt;/li&gt;
  &lt;li&gt;3.适合使用频率低，功能单一，具有内容和服务属性的产品&lt;/li&gt;
  &lt;li&gt;4.像大型的游戏啊之类的，就别想用小程序去替代了。掌机再牛逼也替代不了家庭主机。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;app&quot;&gt;小程序到底有多接近传统的APP&lt;/h2&gt;

&lt;p&gt;首先让我们来看一个网上流传的视频，视频中的小程序由一个具有拿到内测号的team所开发。（在此我没有去核实视频内容的真实性，大家自己判断吧）&lt;/p&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTczMzk4NTgwOA==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot; style=&quot;display: block;margin: 0 auto;&quot; /&gt;

&lt;p&gt;这个视频里面的小程序简直就是高仿APP了，所谓的’APP般的用户体验‘就不言而喻了。&lt;/p&gt;

&lt;p&gt;之前的篇幅中提到了买方便面这个例子，这里就来对比下用小程序来购物有什么不同。先来几张对比图。&lt;/p&gt;

&lt;p&gt;我个人的使用体验是，公众号给我的感觉更像是提供信息服务的，比如文章的推送，商品信息的推送，段子的推送等，通过公众号作为媒介进行购物的可能性甚至小于朋友圈的代购党。但是小程序却不会给我这样的感觉。&lt;/p&gt;

&lt;p&gt;此外，目前的公众号更多的是通过某些第三方平台来进行配置，比如底部导航栏的配置，推送内容的配置等，用户只能从第三方平台所提供的选项中进行选择，而不能’为所欲为‘，而小程序并不受到这样的限制。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;小程序不用安装就能使用的这个概念，谷歌很早就有了。。。&lt;/p&gt;

&lt;p&gt;微信’小程序’恰好找到了资金与功能的一个平衡点。&lt;/p&gt;

&lt;p&gt;关于微信小程序如框架、api、组件、工具等的具体细节建议直接登录&lt;a href=&quot;http://mp.weixin.qq.com/debug/wxadoc/dev/&quot;&gt;微信小程序官方网站&lt;/a&gt;学习，本文不做重复介绍。&lt;/p&gt;

</description>
        <pubDate>Sun, 09 Oct 2016 16:24:07 +0800</pubDate>
        <link>http://lomoy.github.io/article/2016/10/09/wechat-overview.html</link>
        <guid isPermaLink="true">http://lomoy.github.io/article/2016/10/09/wechat-overview.html</guid>
        
        
        <category>article</category>
        
      </item>
    
      <item>
        <title>咱们屯里人</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Jun 2016 20:37:07 +0800</pubDate>
        <link>http://lomoy.github.io/jekyll/update/article/2016/06/01/%E6%88%91%E5%8F%AA%E6%98%AF%E6%98%AF%E6%98%AF%E6%98%AF%E7%9C%8B.html</link>
        <guid isPermaLink="true">http://lomoy.github.io/jekyll/update/article/2016/06/01/%E6%88%91%E5%8F%AA%E6%98%AF%E6%98%AF%E6%98%AF%E6%98%AF%E7%9C%8B.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
        <category>article</category>
        
      </item>
    
      <item>
        <title>求赞助，求包养</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 28 May 2016 20:37:07 +0800</pubDate>
        <link>http://lomoy.github.io/article/2016/05/28/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://lomoy.github.io/article/2016/05/28/welcome-to-jekyll.html</guid>
        
        
        <category>article</category>
        
      </item>
    
  </channel>
</rss>
